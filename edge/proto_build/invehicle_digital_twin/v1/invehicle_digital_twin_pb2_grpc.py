# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto_build.invehicle_digital_twin.v1 import invehicle_digital_twin_pb2 as invehicle__digital__twin_dot_v1_dot_invehicle__digital__twin__pb2


class InvehicleDigitalTwinStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.FindById = channel.unary_unary(
                '/invehicle_digital_twin.InvehicleDigitalTwin/FindById',
                request_serializer=invehicle__digital__twin_dot_v1_dot_invehicle__digital__twin__pb2.FindByIdRequest.SerializeToString,
                response_deserializer=invehicle__digital__twin_dot_v1_dot_invehicle__digital__twin__pb2.FindByIdResponse.FromString,
                )
        self.Register = channel.unary_unary(
                '/invehicle_digital_twin.InvehicleDigitalTwin/Register',
                request_serializer=invehicle__digital__twin_dot_v1_dot_invehicle__digital__twin__pb2.RegisterRequest.SerializeToString,
                response_deserializer=invehicle__digital__twin_dot_v1_dot_invehicle__digital__twin__pb2.RegisterResponse.FromString,
                )


class InvehicleDigitalTwinServicer(object):
    """Missing associated documentation comment in .proto file."""

    def FindById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Register(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InvehicleDigitalTwinServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'FindById': grpc.unary_unary_rpc_method_handler(
                    servicer.FindById,
                    request_deserializer=invehicle__digital__twin_dot_v1_dot_invehicle__digital__twin__pb2.FindByIdRequest.FromString,
                    response_serializer=invehicle__digital__twin_dot_v1_dot_invehicle__digital__twin__pb2.FindByIdResponse.SerializeToString,
            ),
            'Register': grpc.unary_unary_rpc_method_handler(
                    servicer.Register,
                    request_deserializer=invehicle__digital__twin_dot_v1_dot_invehicle__digital__twin__pb2.RegisterRequest.FromString,
                    response_serializer=invehicle__digital__twin_dot_v1_dot_invehicle__digital__twin__pb2.RegisterResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'invehicle_digital_twin.InvehicleDigitalTwin', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InvehicleDigitalTwin(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def FindById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/invehicle_digital_twin.InvehicleDigitalTwin/FindById',
            invehicle__digital__twin_dot_v1_dot_invehicle__digital__twin__pb2.FindByIdRequest.SerializeToString,
            invehicle__digital__twin_dot_v1_dot_invehicle__digital__twin__pb2.FindByIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/invehicle_digital_twin.InvehicleDigitalTwin/Register',
            invehicle__digital__twin_dot_v1_dot_invehicle__digital__twin__pb2.RegisterRequest.SerializeToString,
            invehicle__digital__twin_dot_v1_dot_invehicle__digital__twin__pb2.RegisterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
