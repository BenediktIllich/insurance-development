services:

  # EDC Connector to simulate a dataspace participant acting as a data provider which is located in EU.
  automotiveoem1:
    container_name: automotiveoem1
    build:
      context: ${MVD_PATH}/launchers/connector
      args:
        JVM_ARGS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
    environment:
      EDC_DSP_CALLBACK_ADDRESS: http://automotiveoem1:8282/api/dsp
      EDC_CONNECTOR_NAME: automotiveoem1
      EDC_PARTICIPANT_ID: did:web:did-server:automotiveoem1

      EDC_BLOBSTORE_ENDPOINT_TEMPLATE: "http://azurite:10000/%s"
      EDC_IDENTITY_DID_URL: did:web:did-server:automotiveoem1
      EDC_VAULT: ${MVD_PATH}/system-tests/resources/vault/company1/company1-vault.properties
      EDC_KEYSTORE: ${MVD_PATH}/system-tests/resources/vault/company1/company1-keystore.jks
      EDC_SELF_DESCRIPTION_DOCUMENT_PATH: ${MVD_PATH}/system-tests/resources/self-description/company1/sdd.json
      EDC_KEYSTORE_PASSWORD: test123
      EDC_API_AUTH_KEY: ApiKeyDefaultValue
      EDC_IAM_DID_WEB_USE_HTTPS: "false"
      EDC_CATALOG_CACHE_EXECUTION_DELAY_SECONDS: 5
      EDC_CATALOG_CACHE_EXECUTION_PERIOD_SECONDS: 5
      EDC_CATALOG_CACHE_PARTITION_NUM_CRAWLERS: 5
      EDC_DATAPLANE_TOKEN_VALIDATION_ENDPOINT: http://automotiveoem1:8383/api/control/token
      REGISTRATION_SERVICE_API_URL: http://registration-service:8184/api/authority
      EDC_WEB_REST_CORS_ENABLED: "true"
      EDC_WEB_REST_CORS_HEADERS: "origin,content-type,accept,authorization,x-api-key"
    depends_on:
      - did-server
      - azurite
      - registration-service
    ports:
      - "9191:9191"
      - "8181:8181"
      - "5005:5005"
      - "7171:7171"
    volumes:
      - ./resources:/resources

  # EDC Connector to simulate a dataspace participant acting as a data consumer which is located in EU.
  insurancecompany1:
    container_name: insurancecompany1
    build:
      context: ${MVD_PATH}/launchers/connector
      args:
        JVM_ARGS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006"
    environment:
      EDC_DSP_CALLBACK_ADDRESS: http://insurancecompany1:8282/api/dsp
      EDC_CONNECTOR_NAME: insurancecompany1
      EDC_PARTICIPANT_ID: did:web:did-server:insurancecompany1

      EDC_BLOBSTORE_ENDPOINT_TEMPLATE: "http://azurite:10000/%s"
      EDC_IDENTITY_DID_URL: did:web:did-server:insurancecompany1
      EDC_VAULT: ${MVD_PATH}/system-tests/resources/vault/company2/company2-vault.properties
      EDC_KEYSTORE: ${MVD_PATH}/system-tests/resources/vault/company2/company2-keystore.jks
      EDC_SELF_DESCRIPTION_DOCUMENT_PATH: ${MVD_PATH}/system-tests/resources/self-description/company2/sdd.json
      EDC_KEYSTORE_PASSWORD: test123
      EDC_API_AUTH_KEY: ApiKeyDefaultValue
      EDC_IAM_DID_WEB_USE_HTTPS: "false"
      EDC_CATALOG_CACHE_EXECUTION_DELAY_SECONDS: 5
      EDC_CATALOG_CACHE_EXECUTION_PERIOD_SECONDS: 5
      EDC_CATALOG_CACHE_PARTITION_NUM_CRAWLERS: 5
      EDC_DATAPLANE_TOKEN_VALIDATION_ENDPOINT: http://insurancecompany1:8383/api/control/token
      REGISTRATION_SERVICE_API_URL: http://registration-service:8184/api/authority
      EDC_WEB_REST_CORS_ENABLED: "true"
      EDC_WEB_REST_CORS_HEADERS: "origin,content-type,accept,authorization,x-api-key"
    depends_on:
      - did-server
      - azurite
      - registration-service
    ports:
      - "9192:9191"
      - "8182:8181"
      - "5006:5006"
      - "7172:7171"
    volumes:
      - ./resources:/resources

  # EDC Connector to simulate a dataspace participant acting as a consumer which is located in US.
  insurancecompany2:
    container_name: insurancecompany2
    build:
      context: ${MVD_PATH}/launchers/connector
      args:
        JVM_ARGS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5007"
    environment:
      EDC_DSP_CALLBACK_ADDRESS: http://insurancecompany2:8282/api/dsp
      EDC_CONNECTOR_NAME: insurancecompany2
      EDC_PARTICIPANT_ID: did:web:did-server:insurancecompany2

      EDC_BLOBSTORE_ENDPOINT_TEMPLATE: "http://azurite:10000/%s"
      EDC_IDENTITY_DID_URL: did:web:did-server:insurancecompany2
      EDC_VAULT: ${MVD_PATH}/system-tests/resources/vault/company3/company3-vault.properties
      EDC_KEYSTORE: ${MVD_PATH}/system-tests/resources/vault/company3/company3-keystore.jks
      EDC_SELF_DESCRIPTION_DOCUMENT_PATH: ${MVD_PATH}/system-tests/resources/self-description/company3/sdd.json
      EDC_KEYSTORE_PASSWORD: test123
      EDC_API_AUTH_KEY: ApiKeyDefaultValue
      EDC_IAM_DID_WEB_USE_HTTPS: "false"
      EDC_CATALOG_CACHE_EXECUTION_DELAY_SECONDS: 5
      EDC_CATALOG_CACHE_EXECUTION_PERIOD_SECONDS: 5
      EDC_CATALOG_CACHE_PARTITION_NUM_CRAWLERS: 5
      EDC_DATAPLANE_TOKEN_VALIDATION_ENDPOINT: http://insurancecompany2:8383/api/control/token
      REGISTRATION_SERVICE_API_URL: http://registration-service:8184/api/authority
      EDC_WEB_REST_CORS_ENABLED: "true"
      EDC_WEB_REST_CORS_HEADERS: "origin,content-type,accept,authorization,x-api-key"
    depends_on:
      - did-server
      - azurite
      - registration-service
    ports:
      - "9193:9191"
      - "8183:8181"
      - "5007:5007"
      - "7173:7171"
    volumes:
      - ./resources:/resources

  # Usages postman collections for initial data seeding to connectors.
  newman:
    container_name: newman
    image: postman/newman:ubuntu
    entrypoint: /bin/bash
    command: deployment/seed-data.sh
    volumes:
      - ../deployment/:/deployment
    working_dir: /
    environment:
      API_KEY: ApiKeyDefaultValue
      EDC_HOST: automotiveoem1:insurancecompany1:insurancecompany2
      ASSETS_STORAGE_ACCOUNT: company1assets:company2assets:company3assets
      PARTICIPANT_ID: company1:company2:company3
    depends_on:
      automotiveoem1:
        condition: service_healthy
      insurancecompany1:
        condition: service_healthy
      insurancecompany2:
        condition: service_healthy

  # A nginx based HTTP server to serve dataspace participants DIDs.
  did-server:
    container_name: did-server
    image: nginx
    volumes:
      - ./resources/webdid:/usr/share/nginx/html
    ports:
      - "7070:80"

  # Azure blob storage simulator.
  azurite:
    container_name: azurite
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - 10000:10000
    environment:
      AZURITE_ACCOUNTS: company1assets:key1;company2assets:key2;company3assets:key3

  # Dataspace registration service authority.
  registration-service:
    container_name: registration-service
    build:
      #e.g. /home/user/RegistrationService/launcher
      context: ${MVD_PATH}/launchers/registrationservice
      args:
        JVM_ARGS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5008"
    environment:
      JWT_AUDIENCE: http://registration-service:8184/api/authority
      EDC_IAM_DID_WEB_USE_HTTPS: "false"
      EDC_CONNECTOR_NAME: registration-service
      EDC_IDENTITY_DID_URL: did:web:did-server:registration-service
      EDC_SELF_DESCRIPTION_DOCUMENT_PATH: ${MVD_PATH}/system-tests/resources/self-description/registration-service/sdd.json
      EDC_VAULT: ${MVD_PATH}/system-tests/resources/vault/registration-service/registration-service-vault.properties
      EDC_KEYSTORE: ${MVD_PATH}/system-tests/resources/vault/registration-service/registration-service-keystore.jks
      EDC_KEYSTORE_PASSWORD: test123
      EDC_ERROR_RESPONSE_VERBOSE: "true"
    ports:
      - "8184:8184"
      - "8185:8181"
      - "5008:5008"
      - "7174:7171"
    volumes:
      - ./resources:/resources

  # cli-tools to help setup MVD environment e.g. registering participant to authority.
  cli-tools:
    container_name: cli-tools
    build:
      context: ${MVD_PATH}/system-tests/resources/cli-tools
    volumes:
      - ./resources:/resources
      - ../resources:/common-resources
    depends_on:
      automotiveoem1:
        condition: service_healthy
      insurancecompany1:
        condition: service_healthy
      insurancecompany2:
        condition: service_healthy
      registration-service:
        condition: service_healthy

  # Data Dashboard (MVD UI) for participant company1
  company1-datadashboard:
    container_name: automotiveoem1-datadashboard
    build:
      context: ${MVD_UI_PATH}
    volumes:
      - ./resources/appconfig/automotiveoem1:/usr/share/nginx/html/assets/config
    depends_on:
      automotiveoem1:
        condition: service_healthy
    ports:
      - "7080:80"
    profiles: ["ui"]

      # Data Dashboard (MVD UI) for participant company2
  company2-datadashboard:
    container_name: company2-datadashboard
    build:
      context: ${MVD_UI_PATH}
    volumes:
      - ./resources/appconfig/insurancecompany1:/usr/share/nginx/html/assets/config
    depends_on:
      insurancecompany1:
        condition: service_healthy
    ports:
      - "7081:80"
    profiles: ["ui"]

  # Data Dashboard (MVD UI) for participant company3
  company3-datadashboard:
    container_name: company3-datadashboard
    build:
      context: ${MVD_UI_PATH}
    volumes:
      - ./resources/appconfig/insurancecompany2:/usr/share/nginx/html/assets/config
    depends_on:
      insurancecompany2:
        condition: service_healthy
    ports:
      - "7082:80"
    profiles: ["ui"]
